<?php

/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see https://github.com/ILIAS-eLearning/ILIAS/tree/trunk/docs/LICENSE */

namespace srag\Plugins\FlashcardQuestions\Object;

use ilCheckboxInputGUI;
use ilFlashcardQuestionsPlugin;
use ilObjFlashcardQuestions;
use ilObjFlashcardQuestionsGUI;
use ilObjTaxonomy;
use ilPropertyFormGUI;
use ilSelectInputGUI;
use ilTextAreaInputGUI;
use ilTextInputGUI;
use srag\DIC\FlashcardQuestions\DICTrait;

/**
 * Class ObjSettingsFormGUI
 *
 * Generated by srag\PluginGenerator v0.7.2
 *
 * @package srag\Plugins\FlashcardQuestions\Object
 *
 * @author  studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 * @author  studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 */
class ObjSettingsFormGUI extends ilPropertyFormGUI {

	use DICTrait;
	const PLUGIN_CLASS_NAME = ilFlashcardQuestionsPlugin::class;
	/**
	 * @var ilObjFlashcardQuestionsGUI
	 */
	protected $parent;

    /**
     * ObjSettingsFormGUI constructor.
     * @param ilObjFlashcardQuestionsGUI $parent
     * @throws \srag\DIC\FlashcardQuestions\Exception\DICException
     */
	public function __construct(ilObjFlashcardQuestionsGUI $parent) {
		parent::__construct();
		$this->parent = $parent;
        self::dic()->mainTemplate()->addJavaScript(self::plugin()->directory() . '/templates/js/object_settings.js');
		$this->setForm();
	}


	/**
	 *
	 */
	protected function setForm()/*: void*/ {
		$this->setFormAction(self::dic()->ctrl()->getFormAction($this->parent));

		$this->setTitle(self::plugin()->translate("settings", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS));

		$this->addCommandButton(ilObjFlashcardQuestionsGUI::CMD_SETTINGS_STORE, self::plugin()
			->translate("save", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS));

		$title = new ilTextInputGUI(self::plugin()->translate("title", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS), "title");
		$title->setRequired(true);
		$title->setValue($this->parent->object->getTitle());
		$this->addItem($title);

		$description = new ilTextAreaInputGUI(self::plugin()
			->translate("description", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS), "description");
		$description->setValue($this->parent->object->getLongDescription());
		$this->addItem($description);

		$online = new ilCheckboxInputGUI(self::plugin()->translate("online", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS), "online");
		$online->setChecked($this->parent->object->isOnline());
		$this->addItem($online);

		$report_lvl_1 = new ilSelectInputGUI(self::plugin()->translate("report_lvl_1", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS), "report_lvl_1");
		$report_lvl_1->setInfo(self::plugin()->translate("report_lvl_1_info", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS));
		$options = array(0 => self::dic()->language()->txt("please_choose"));
		foreach ($this->parent->getObject()->getTaxonomyIds() as $tax_id) {
		    $options[$tax_id] = ilObjTaxonomy::_lookupTitle($tax_id);
        }
		$report_lvl_1->setOptions($options);
		$report_lvl_1->setValue($this->parent->object->getReportLvl1());
		$report_lvl_1->setDisabled(count($options) == 0);
        $this->addItem($report_lvl_1);

		$report_lvl_2 = new ilSelectInputGUI(self::plugin()->translate("report_lvl_2", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS), "report_lvl_2");
        $report_lvl_2->setInfo(self::plugin()->translate("report_lvl_2_info", ilObjFlashcardQuestionsGUI::LANG_MODULE_SETTINGS));
        $options = array(0 => self::dic()->language()->txt("please_choose"));
		foreach ($this->parent->getObject()->getTaxonomyIds() as $tax_id) {
		    $options[$tax_id] = ilObjTaxonomy::_lookupTitle($tax_id);
        }
        $report_lvl_2->setOptions($options);
		$report_lvl_2->setDisabled(count($options) == 1);
		$report_lvl_2->setValue($this->parent->object->getReportLvl2());
		$this->addItem($report_lvl_2);


	}


	/**
	 *
	 */
	public function updateSettings()/*: void*/ {
		$this->parent->object->setTitle($this->getInput("title"));
		$this->parent->object->setDescription($this->getInput("description"));
		$this->parent->object->setOnline(boolval($this->getInput("online")));
		$this->parent->object->setReportLvl1($this->getInput('report_lvl_1'));
		$this->parent->object->setReportLvl2($this->getInput('report_lvl_2'));
		$this->parent->object->update();
	}
}
