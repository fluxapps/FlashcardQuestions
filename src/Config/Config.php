<?php

/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see https://github.com/ILIAS-eLearning/ILIAS/tree/trunk/docs/LICENSE */

namespace srag\Plugins\FlashcardQuestions\Config;

use FlashcardQuestionsRemoveDataConfirm;
use ilFlashcardQuestionsPlugin;
use srag\ActiveRecordConfig\ActiveRecordConfig;

/**
 * Class Config
 *
 * Generated by srag\PluginGenerator v0.7.2
 *
 * @package srag\Plugins\FlashcardQuestions\Config
 *
 * @author  studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 * @author  studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 */
class Config extends ActiveRecordConfig {

	const TABLE_NAME = "rep_robj_xfcq_config";
	const PLUGIN_CLASS_NAME = ilFlashcardQuestionsPlugin::class;
	const KEY_SOME = "some";
	const DEFAULT_SOME = "some";
	// TODO: Implement Config


	/**
	 * @return string
	 */
	public static function getSome(): string {
		return self::getStringValue(self::KEY_SOME, self::DEFAULT_SOME);
	}


	/**
	 * @param string $some
	 */
	public static function setSome(string $some)/*: void*/ {
		self::setStringValue(self::KEY_SOME, $some);
	}


	/**
	 * @return bool|null
	 */
	public static function getUninstallRemovesData()/*: ?bool*/ {
		return self::getXValue(FlashcardQuestionsRemoveDataConfirm::KEY_UNINSTALL_REMOVES_DATA, FlashcardQuestionsRemoveDataConfirm::DEFAULT_UNINSTALL_REMOVES_DATA);
	}


	/**
	 * @param bool $uninstall_removes_data
	 */
	public static function setUninstallRemovesData(bool $uninstall_removes_data)/*: void*/ {
		self::setBooleanValue(FlashcardQuestionsRemoveDataConfirm::KEY_UNINSTALL_REMOVES_DATA, $uninstall_removes_data);
	}


	/**
	 *
	 */
	public static function removeUninstallRemovesData()/*: void*/ {
		self::removeName(FlashcardQuestionsRemoveDataConfirm::KEY_UNINSTALL_REMOVES_DATA);
	}
}
